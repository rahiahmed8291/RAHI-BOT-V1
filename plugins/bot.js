const axios = require("axios");
const selectionData = {};

module.exports = {
    config: {
      name: "bot",
      aliases: ["sim"],
      permission: 0,
      prefix: "both",
      categorie: "AI Chat",
      cooldowns: 5,
      credit: "Developed by Mohammad Nayan",
      usages: [
        `${global.config.PREFIX}bot <message> - Start a chat with the bot.`,
        `${global.config.PREFIX}bot - Receive a random greeting from the bot.`,
      ],
      description: "Engage in conversations with an AI-powered bot!",
    },

  event: async ({ event, api, body }) => {
    const { threadId, senderId, replyMessage, message} = event;

  
    if (!selectionData[threadId]) return;
    const { n, userId } = selectionData[threadId];

    
    if (userId !== senderId || !n) return;

    

    const quotedMessage =
      n.message?.extendedTextMessage?.text || null;

    if (!quotedMessage || replyMessage !== quotedMessage) return;
    

    try {

        const apis = await axios.get('https://raw.githubusercontent.com/MOHAMMAD-NAYAN-07/Nayan/main/api.json');
      const apiss = apis.data.api;
      
      const response = await axios.get(
        `${apiss}/sim?type=ask&ask=${encodeURIComponent(body)}`
      );

      const replyText = response.data.data?.msg || "I'm not sure how to respond to that.";

      
      const botReply = await api.sendMessage(threadId, { text: replyText }, { quoted: message });

      
      selectionData[threadId] = {
        userId: senderId,
        n: botReply,
      };
    } catch (error) {
      console.error("Error while contacting the API:", error);
      await api.sendMessage(threadId, {
        text: "An error occurred while processing your request. Please try again later.",
      });
    }
  },

  start: async ({ event, api, args }) => {
    const usermsg = args.join(" ");
    const { threadId, senderId, message} = event;

    
    if (!usermsg) {
      const greetings = [
        "рж╣рзБржо ржЬрж╛ржи рждрзЛржорж╛рж░ ржЕржЗржЦрж╛ржирзЗ ржЙржорзНржоржорж╛рж╣ЁЯШ╖",
        "jang bal falabaЁЯЩВ",
          "ржХрж┐ ржЧрзЛ рж╕рзЛржирж╛ ржЖржорж╛ржХрзЗ ржбрж╛ржХржЫ ржХрзЗржирзЛ",
        "ржмрж╛рж░ ржмрж╛рж░ ржЖржорж╛ржХрзЗ ржбрж╛ржХрж╕ ржХрзЗржиЁЯШб",
        "ржЖржорж╛ржХрзЗ ржПрждрзЛ ржирж╛ ржбрзЗржХрзЗ ржмрж╕ ржорзБрж╕рзНрждрж╛ржлрж┐ржЬрзБрж░ ржХрзЗ ржПржХржЯрж╛ ржЧржл ржжрзЗ ЁЯЩД",
        "jang hanga korba",
          "ржмрж╕ ржорзБрж╕рзНрждрж╛ржлрж┐ржЬрзБрж░ рждрзБржорж╛ржХрзЗ рж░рж╛рждрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЗ",
          "ржЖржорж╛ржХрзЗ ржирж╛ ржбрзЗржХрзЗ ржорзБрж╕рзНрждрж╛ржлрж┐ржЬрзБрж░ ржмрж╕ ржХрзЗ ummmmmah ЁЯТЛржжрзЗ",
          "Eto dakis na.Mustafizur boss cipay ace ЁЯШШЁЯШШ",
          "ржЖрж░ ржбрж╛ржХрж┐рж╕ ржирж╛ред ржмрж╕ ржорзБрж╕рзНрждрж╛ржлрж┐ржЬрзБрж░ рж░рзЗржЧрзЗ ржЧрзЗржЫрзЗ",
          "ржПрждрзЛ ржбрзЗржХрзЗ рж▓рж╛ржн ржирж╛ржЗред ржорзБрж╕рзНрждрж╛ржлрж┐ржЬрзБрж░ ржмрж╕ ржХрж╛рж░рзЛ рж╕рж╛ржерзЗ ржлрж┐рж░рж┐ржд ржХрж░рзЗ ржирж╛ред рж╢рзБржзрзБ ржмрж╛рж╕рж░ ржХрж░рзЗ",
          "ржХрж┐рж░рзЗ ржбрж╛ржХрж╕ ржХрзЗржиред ржмрж╕ ржорзБрж╕рзНрждрж╛ржлрж┐ржЬрзБрж░ ржХрзЗ рж▓рж╛ржЧржмрзЗ ржирж╛ржХрж┐",
          " ржмрж╛ржирзНржзржмрзА рж▓рж▓рж┐рждрж╛ред ржХрж┐ржЫрзБ ржмрж▓ржмрж╛ ред ржПржЦрж╛ржирзЗ ржмрж▓ржмрж╛ ржирж╛ржХрж┐ ржЗржиржмржХрзНрж╕рзЗ ржмрж▓ржмрж╛",
          "ржЖрж░ ржпрж╛ржмрзЛ ржирж╛ ржмрзЗржЧрзБрж▓ рждрзБрж▓рж┐рждрзЗ ржУ рж▓рж▓рж┐рждрзЗ ржЖрж░ ржпрж╛ржмрзЛ ржирж╛ ржмрзЗржЧрзБржи рждрзБрж▓рж┐рждрзЗ",
          " ржЪрзБржк ржХржерж╛ ржирж╛ржЗ рждрж░ рж╕рж╛ржерзЗ ред ",
          " ржорзБрж╕рзНрждрж╛ржлрж┐ржЬрзБрж░ ржмрж╕ ржХрзЗ i love you ржмрж▓ ред ржирж┐рж╢рж┐ рж░рж╛рждрзЗрж░ ржмрж╛ржЬржирж╛ рж╢рзБржирждрзЗ ржкрж╛ржмрж┐",
          " ржПржЦржи рждрзЛ ржбрж╛ржХржмрж┐ ред ржпржЦржи ржмрж╛рж╕рж░ ржХрж░ржмрж┐ рждржЦржи рждрзЛ ржбрж╛ржХржмрж┐ ржирж╛ред",
          "ржХрж╛ржЧржЬрзЗрж░ ржирзЛржЯрзЗрж░ ржХрж╛ржЫрзЗ рж╣рзЗрж░рзЗ ржЧрзЗржЫрзЗ,рж╕ржХрж╛рж▓рзЗрж░ ржШрзБржо ржмрж┐ржХрзЗрж▓рзЗрж░ ржЦрзЗрж▓рж╛-ржзрзБрж▓рж╛.!",
          "ржХрждржжрж┐ржи рж╣ржпрж╝рзЗ ржЧрзЗрж▓рзЗрж╛ ржмрж┐ржЫржирж╛ржпрж╝ ржорзБрждрж┐ ржирж╛-ЁЯШ┐-ржорж┐рж╕ ржЗржЙ ржирзЗржВржЯрж╛ ржХрж╛рж▓-ЁЯе║ЁЯдз",
          "рждрзБржЗ ржЫрзЗрж▓рзЗ рж╣рж▓рзЗ ржЖрж╕рзНрж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ред ржорзЗрзЯрзЗ рж╣рж▓рзЗ i love you ЁЯШШ",
      ];

      const randomGreeting = greetings[Math.floor(Math.random() * greetings.length)];
      const userToMention = senderId;

      const greetingMessage = await api.sendMessage(threadId, {
        text: `@${userToMention.split('@')[0]}, ${randomGreeting}`,
        mentions: [userToMention],
      }, { quoted: message });

      
      selectionData[threadId] = {
        userId: senderId,
        n: greetingMessage,
      };
      return;
    }

    try {
        const apis = await axios.get('https://raw.githubusercontent.com/MOHAMMAD-NAYAN-07/Nayan/main/api.json');
      const apiss = apis.data.api;
      
      const response = await axios.get(
        `${apiss}/sim?type=ask&ask=${encodeURIComponent(usermsg)}`
      );

      const replyText = response.data.data?.msg || "I'm not sure how to respond to that.";

      
      const botReply = await api.sendMessage(threadId, { text: replyText }, { quoted: message });

      
      selectionData[threadId] = {
        userId: senderId,
        n: botReply,
      };
    } catch (error) {
      console.error("Error while contacting the API:", error);
      await api.sendMessage(threadId, {
        text: "An error occurred while processing your request. Please try again later.",
      });
    }
  },
};
